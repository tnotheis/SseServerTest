apiVersion: v1
kind: Namespace
metadata:
  name: sseservertest
---
apiVersion: v1
kind: Secret
metadata:
  name: tlscert
  namespace: sseservertest
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZrekNDQTN1Z0F3SUJBZ0lVR0hMQTFzcEV4Z0puWVJRN2xzZ0N3Nk4wY0NRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1dURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpERVNNQkFHQTFVRUF3d0pjM05sYzJWeWRtVnlNQjRYCkRUSTFNREl4TnpBMk1qRXlObG9YRFRJMk1ESXhOekEyTWpFeU5sb3dXVEVMTUFrR0ExVUVCaE1DUVZVeEV6QVIKQmdOVkJBZ01DbE52YldVdFUzUmhkR1V4SVRBZkJnTlZCQW9NR0VsdWRHVnlibVYwSUZkcFpHZHBkSE1nVUhSNQpJRXgwWkRFU01CQUdBMVVFQXd3SmMzTmxjMlZ5ZG1WeU1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBCk1JSUNDZ0tDQWdFQTNGRUVCRmM3bnRiUHE1aWJmL1cvVjRxdTc4RmpHd3hNK0ZTaHdRYmxhWGZPL3J6UC9lWkQKKzI1Q2NlTWk5V25wTk9HdU1nYStTSG9odjJvZzdqaHBQSW44VGF2N2JteHMzRENFYmFJVlBnakxsMDFNblFDagpVWEtkdzQrT2tUeExqM04rWmlQbkhXaXdaSEJWM0t0eGdFZEwvUWJHOHlQSEp5SDdBMGJTZCtVY2dITVpYbjBvClZqNHd4WkhvZGowem9QazR3WUFqUEhDM01PbnpHSWxCWWtyTC9VRm9FMHpEOGgxc1FrdFhlNlRYTjlmRm1SZUYKSVloWUU0SUlMVllZeFhOUlpFV29ON1kwQ0dqL0ZlVDdlck9BQTQ3L2NmQXpsc2Joa0ZrVHRaWGY5QkZDQi94UQpzY3c0Tm5odlFVOTNoT2FBZWVMbEpwdVlJeTEyUFR2MnJVcFlXZ3FLN0F1Z2VudmRLOXJJK2M1MW9sRlkwMEF2ClhzY3NmcFZXNnRuamROMWo1bGljZ0ZSTXRoeGZHaS85S245S3QzU25XdlduRWg2TkdHeW85b1V6TzU3UHVwc3IKVnRCOFRkNlgrWlFzVC9oYjBJM2krak45a1N1amJsVThndG9CMlFjRlZKV2xpL3oyL2lYYzVDOU9naTdvQUN0ZApXSXdvS2xDU21GVE5RelllNlN5cUVFMklPaHBtcnVDYU02ZzZHaXF0SjZOc3ZvRC9iSDVRTk9WL08zc1FRdUhxCnZhVkRvQWxnQzR6K3kwR01ueWovS2NVYzJCTjFiSnF6cmNwUVI5Zi9LbTBXNnVac2tRUzRIb2lSbWdnbHdNTTYKT0sxZENuaTI1ekp6Y1ZRTWJTcXRKYVhRYmxOOTBsM1ZjUTdxeGxBT05CL2VoS1gzUTIxZ1phY0NBd0VBQWFOVApNRkV3SFFZRFZSME9CQllFRk1iTWdSRysyR1Y5dkhGMHZ5ZXVtU29UYmxpSE1COEdBMVVkSXdRWU1CYUFGTWJNCmdSRysyR1Y5dkhGMHZ5ZXVtU29UYmxpSE1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUwKQlFBRGdnSUJBQXhEY0lvVFo1KzlPRzlzQmw0Y3dKanJnK2ZSaXV5ODU3NjUzTCs3YlQ4a2ZKYUVHdnAwUFFjTApMVDYyaUc5bFZyWmFXZVgxajVmdnpFdnRtWEVQMUNFWXNDRDNUa21lUGQwSTBmSkpXRElOQ3RZeGVjQUxyRDZMCjJhN0JYOWd1UWNqaGl0LzBpM3Y4eHRnTFRVNXhDMUxoWUN2dThEUnViU1dteGEwa2NQZ3lOZ2xidHB2MGIrdk4KTmdBWmx0MTlJM2F1VlNpQXNIWGJRTlk2ZEVSQmFOY2dmU1ZVaHZmOWFXUmVMMllTZVcxeHo4V29ZZjZZRHRIdgo5TllQQlovLytMVE9IU2V4V29BemZ5SlI0MG9mZmFZU1lJbUhCc3RST21VbUV5K1VyYll0TnV1S3IwOXN5L2NsCitYUGljS1ppeHFNS1FRR1NIOVhVMWRuMFk2REVEKzFoc1lPZ24xNEVJVEM3WFlva2VWZEsvZ2lheEkrWE12RFoKc203bm1IY2M1cDhYSW1Vc0JEV2R0amR3OU9EMEtPRmRlK00rME5lclFmNTVwQnR1TnpkclVtMnA2R1QvVjlxbwpMTkphOEk1cm15Q2gwYURnRmUwQnE1a0JaNmZkcmdnNmVWc1ZZcVhybW54bXV2OHg2Wm9BU1hLTHNTZlV3STMrClZlTi9xTi9vT0FCcFJBNGY0N0F1cUNxUExGNnhIMkx1Q3lwaC85UkFoRUdlWXJGYkhKbXdTOW1IN3BwSEtKSjIKN2prWk1tYnU0VHRiVUdsa2xVWkIwcGVzR1lwR3ExWHVjZW1rb1c1NENGZkJPaWVia3hYMmNyNUY5NHBkcHVBMwp4N0w3WFovUHJHYnhKU29BcVQvQ3FBOXBoaWdrdnZwamhkcWQxZ3lxdHZoNnQ4SkRyT2V4Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRZ0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1N3d2dna29BZ0VBQW9JQ0FRRGNVUVFFVnp1ZTFzK3IKbUp0LzliOVhpcTd2d1dNYkRFejRWS0hCQnVWcGQ4Nyt2TS85NWtQN2JrSng0eUwxYWVrMDRhNHlCcjVJZWlHLwphaUR1T0drOGlmeE5xL3R1Ykd6Y01JUnRvaFUrQ011WFRVeWRBS05SY3AzRGo0NlJQRXVQYzM1bUkrY2RhTEJrCmNGWGNxM0dBUjB2OUJzYnpJOGNuSWZzRFJ0SjM1UnlBY3hsZWZTaFdQakRGa2VoMlBUT2crVGpCZ0NNOGNMY3cKNmZNWWlVRmlTc3Y5UVdnVFRNUHlIV3hDUzFkN3BOYzMxOFdaRjRVaGlGZ1RnZ2d0VmhqRmMxRmtSYWczdGpRSQphUDhWNVB0NnM0QURqdjl4OERPV3h1R1FXUk8xbGQvMEVVSUgvRkN4ekRnMmVHOUJUM2VFNW9CNTR1VW1tNWdqCkxYWTlPL2F0U2xoYUNvcnNDNkI2ZTkwcjJzajV6bldpVVZqVFFDOWV4eXgrbFZicTJlTjAzV1BtV0p5QVZFeTIKSEY4YUwvMHFmMHEzZEtkYTlhY1NIbzBZYktqMmhUTTducys2bXl0VzBIeE4zcGY1bEN4UCtGdlFqZUw2TTMyUgpLNk51VlR5QzJnSFpCd1ZVbGFXTC9QYitKZHprTDA2Q0x1Z0FLMTFZakNncVVKS1lWTTFETmg3cExLb1FUWWc2CkdtYXU0Sm96cURvYUtxMG5vMnkrZ1A5c2ZsQTA1WDg3ZXhCQzRlcTlwVU9nQ1dBTGpQN0xRWXlmS1A4cHhSelkKRTNWc21yT3R5bEJIMS84cWJSYnE1bXlSQkxnZWlKR2FDQ1hBd3pvNHJWMEtlTGJuTW5OeFZBeHRLcTBscGRCdQpVMzNTWGRWeER1ckdVQTQwSDk2RXBmZERiV0JscHdJREFRQUJBb0lDQUdmc2gxcU0wNERQajFKQVFFbVI0Rm9vCi91LzFad3hoTndXRTFuQTVFb28zaTVxNThkcXdmYXppaTlFdzlWS1NUUUUyMjNhWm03U1FkODdVL3dlZjhIUXcKR3FXQTFLOTMwYm5qNFBQZUd1c1NOd2I5M1gvSngwQXFNcVVHMkpkRnU5YkZBZ0NvT3VLeWVWSkhjeGtPZmhHbQpqLytnN01QUVFxY0E3bWpUUllCc3dJOE92QTdJTnZqSGlUWUk1NEN1eWVYSzZhek5CdElCMFVmdmMwNUZvR1AvCktFNGtSaldrWm1HVTQzWTZGK0FwRjZRdDBmV3ZGSXVHeHhVY3AwTExkQS9mbjZzTytKU2ZDOWhUdnMvVEhaVDUKaXc4aXF2aFI5K1BObUtVQWY3Mk9Id0FBREFlOFMwd3pLdWoyMG5RYVNpU1VubEhnWjN0WXRlRVNGczQzdE5tVQoyamluWTc4QUcwTnhyMVQzaEw2eE9QUFJKbTBDRFVYcmN5WnBSY1NsSnhmS3ZIeEE5Z0ZVeGRKZ1V4aEJRZmtaClJEM2Joa1c3YVBsSENLN3BFZHZvVWhzWmt0cDVQZTJ3aWN1NmRJYWFyRDZyRWpEM0lOZHpOSldGZFdSSHpaazcKem1ZcVpIUm5EUnF4Z3V5T2ZBTEUycGRrdFFIcGdROWZGeXBNYmFHQlN0M0p6QXZQdjlXZFVzeDNJazVjUktZOApvdUZ4ak5QbnUrUHFDRWx6SVFNSnZlcnlpck4zVG1zSmZDMXlQekluZE1pYlZaMFFCcWhNcVFCN1p4WGZPUHlDCmZvNWtnSVR2WjhtMldYVlJUWkFDOG9lZy9XY3VQWnRPYkMrS01VTnZqbkhqNmJocTJ0aUdUazFBdUtiR0x5WkoKY29PZFJmWm1NM1dwOFQ2YnZFclJBb0lCQVFEZmNPK0xkVFpkbzlLa3QweGYzVVNCSkp6SlB6U3hDNUNGMGtaYgowcjBJWWpYdEtFMVJKcE01NG5Lc1VPcmpIbmp5WTV5STNaMnYyb0k4bVpWVHFYRWxCbG9INm9tUEQ1L2VzQlU3CmZpK25yVWgyNVg4Z3Z6RlNjL2hUaXUvT1JQMTRnNDNEN1hTSE44RDRJRE5pSGZSYzJ3L2hKS0N6V0tTaklTYTUKTHJrWTBSbGJaeDgxK2dzRWEyR0FFUWJvbTNmeXg4MnhWTFRFRFY1aTh4WGd2Q2NCNklyNFVORnJma0lucnJYcgpHTlprYlB2NFljWHBrcmF3OU9VbWk5aDhWWGdyRitlZ205Y1FxMEZHRnVydzAwaHVGNDE4QWt0bU5lSTArVFRwClM3VVpVaTMzOGFuOVR4UnBUUDExL0twVHB6cjA2WXNJck5GZFBEMG5RM1Zkc0NaRkFvSUJBUUQ4YTRUcWlVYlEKZDR6SlpSNCtUbEVyQUxoVnY5WEY3TVVvSHBqcEd5QmN3czZxWHlYNkhBWmFtYU5VdHo3aDNFWEZUVlZqR2FRVgptUHRuVHpOQkFYZWNjZEUrelU4R0hBV0hGN0ZCc25ML0FXMlJIMjdoRyttMFp3U0h4MU5maEZzMy9lZXZNRlN3CnluNDdaYzRVK21hZFc3WUQ3Ulp4UU1RanpVQWxTMmtPWnpIN0dTQ2llT3lFQlVOeUJDQU9Pc1ErZ1VVcW8rajQKMk1NRzE5TUVvK3RaMFQ5T0hkQll2dGU5KzBicGZWQUloOTgzc1V2WC91djh6eTd0TGxWeDkxeDIzYjJtbklDbwpydFJCaGdlQmo0ZmdZNXBGNkNHMkZNM2g4YjBIVm91OTdHOUhpYVNNbHNPekpBZkpkeGRCWml1eUZuU1JuWG5ICnZIY01zclVQbldEN0FvSUJBR01mQlpVM0pTdjdMY25XYXJJb1JXaUk1bWk4ZWxLRUQ5UGR5VXFZdlRVSDVHWlYKdDU3bFh2Q1J6VTgyQWsxSXlseTA1Yzh0aVBObkd0bHBSSDQ5cjZ5K0daaGphaXlsd01VWUZnTXpZazZmSjROZgpJYnRVTmJ3ZktDMWZlQ3hvSEkybXhuQUJXZTFXUld1TlZWNFViYi8zaWg3VmtkaWQzVU5reEhub0NVTENGOTZkCmE1SVZYMmZSZndwQ0EyK1M4RzRxUnN5QkNFUGtybGQxQU9LV2RUTjZocFBMdm10U01tVEtNM2VjcUJjYTVkaDAKLzBnenhvblB5Z3dFZzcvOFpuZXZmaGlZcVpxQ2JrMTZnelRjZGNnbytLSG5ucTAwQUNxQjF3QWJqcll4NTZTVApkMWFoQ3l2L2RIMHYzaHVJRnpab21EMzc5RkRKRlZQaXNDRWtzSVVDZ2dFQkFKUXZZc1oxZExjcGwrTWJrOWVzCkRvYWFVNTB6azRJd2I4WVB3R0VJNWNUUE1KaGdaMkVmVnJPVmdvZFhWSGt2NFYzaytuM0ZMY2pvR0o4YnBkRkIKMVVCb3FSaWZXd2NSS0VXWXFSMFNiK1E0cUdRTCtnSDVhd2ZYZXBkamN4U2VGUmNYM2czQTU5Y3A2VlZoZk14ZgovQ0hoRjBmU3hkd1MwNUxaQ2hGYTVmL29vVFR5R1hDSVlRRllQYklQcmVuc29neTN3eTAzTUt2MlJQZ2RkK28vCmVRa3ZpR1NKcUNpUlVRSmRJOUlyR1BNSklRZ0c4Nm1JSkc0MEN5NStodmJ5NnJ0MWpjTGtHYnZ0ZHZwSWZ0dVcKc1lRUHRSL1pHUUZWMFZBVnBJMU1SNWxsMWlZL0xmVERCWHlEYUhiampTbDltNlZlL1d3RzhObExVUENKY1RZTApoRVVDZ2dFQUNUTGpUTGdqT2RydUVsRUIzNHNGTTRubEhtWmlpZTdJZ3JlS255RTE0UkJmQmE1ekcwdFRhS2dYCjJZTkQxY01Kb2trQnVTaHhrYVoxY3MrSEFSamExU0U0ZytpN25uTmFWQWNXWThUUjA4RmxUb3crVmR5aFdweG8KeTNVcDV3cWZMa2VsRGxnMUlYVU5KajQzdUJNWUtMcTVQS0E3YzkwSlVYVDNKaThaMGJyTndYc3g3MXFQWkNFMQppeEl1bWgvM1VoWlFuYkhTN3c0RW5OOUFNbS9PUXUyVHhPV3ZGbHVKc3JuMzJDYVd5SzczYlZqMGdHUjByM0hXCkgyTVlpS0pNMDVaRk5sWloyTDg4dm1URlErU3JFNVdwMFNVV1pSZkxvRlhmRWF0UVZrNFZNUnlaSFlCY0UyOVEKOE84a1l1WFVXdk50UGtLZjVJbTFEWTVVOElLMHhnPT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo=
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  annotations:
    alb.networking.azure.io/alb-id: <gateway-resource-id> # TODO: Replace with the Azure resource ID of the Application Gateway for Containers
  name: gateway
  namespace: sseservertest
spec:
  addresses:
    - type: alb.networking.azure.io/alb-frontend
      value: fe
  gatewayClassName: azure-alb-external
  listeners:
    - allowedRoutes:
        namespaces:
          from: Same
      # hostname: <hostname> # Probably optional
      name: https-listener-backbone
      port: 443
      protocol: HTTPS
      tls:
        certificateRefs:
          - group: ""
            kind: Secret
            name: tlscert
        mode: Terminate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sseservertest
  labels:
    app: sseservertest
spec:
  selector:
    matchLabels:
      app: sseservertest
  template:
    metadata:
      labels:
        app: sseservertest
    spec:
      containers:
        - name: sseservertest
          image: tnotheis/sseserver-test
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: sseservertest
  labels:
    app: sseservertest
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: sseservertest
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: sseservertest
spec:
  # hostnames: # Probably optional
  # - <hostname> # Probably optional
  parentRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      name: gateway
  rules:
    - backendRefs:
        - kind: Service
          name: sseservertest
          port: 8080
      matches:
        - path:
            type: PathPrefix
            value: /sse
---
apiVersion: alb.networking.azure.io/v1
kind: RoutePolicy
metadata:
  name: sseservertest
spec:
  targetRef:
    kind: HTTPRoute
    name: sseservertest
    group: gateway.networking.k8s.io
  default:
    timeouts:
      routeTimeout: 0s
